# https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-initialization/#create-a-pod-that-has-an-init-container
apiVersion: v1
kind: Pod
metadata:
  name: data-preprocess-pod
  namespace: isic-skin-cancer-classification
spec:
  restartPolicy: OnFailure
  initContainers:
    - name: repo-clone
      image: alpine/git:v2.49.1
      command: ["sh"]
      args:
        - -c
        - >-
            cd /home &&
            git clone $code_repo repo_code &&
            cd repo_code &&
            git checkout $repo_commit_id
      env:
      
        - name: code_repo
          valueFrom:
              configMapKeyRef:
                name: system-cfgmap
                key: code_repo
        - name: repo_commit_id
          valueFrom:
              configMapKeyRef:
                name: system-cfgmap
                key: repo_commit_id
      
      volumeMounts:
        - mountPath: "/home"
          name: homedir
  
  containers:
    - name: base
      image: isic_preprocessor:latest
      imagePullPolicy: Never
      command: ["bash"]
      args:
        - -c
        - >-
            cp /etc/isic_config/*  /home/repo_code/training_pipeline/preprocess_data/ &&
            cd /home/repo_code/training_pipeline/preprocess_data/ &&
            python preprocess_data.py /workspace/data/$(dataset_folder) /workspace/data/$(preprocessed_dataset_folder)
      env:

        - name: dataset_folder
          valueFrom:
              configMapKeyRef:
                name: training-pipeline-cfgmap
                key: dataset_folder
        - name: preprocessed_dataset_folder
          valueFrom:
              configMapKeyRef:
                name: training-pipeline-cfgmap
                key: preprocessed_dataset_folder
        - name: monitoring_img_hist_bins_size
          valueFrom:
              configMapKeyRef:
                name: system-cfgmap
                key: monitoring_img_hist_bins_size
      

      volumeMounts:
        - mountPath: "/home"
          name: homedir
        - mountPath: "/workspace/data"
          name: training-pipeline-volume
        - mountPath: "/mlflow/artifacts"
          name: mlflow-artifacts-volume
        - mountPath: /etc/isic_config
          name: training-pipeline-json-defs-volume
  volumes: ###
    - name: training-pipeline-volume ###
      persistentVolumeClaim: ###
        claimName: traininig-pipeline-pvc ###
    
    - name: mlflow-artifacts-volume ###
      persistentVolumeClaim: ###
        claimName: mlflow-artifacts-pvc ###
  
    - name: homedir
      emptyDir: {}

    - name: training-pipeline-json-defs-volume
      configMap:
        name: training-pipeline-json-defs
        items:
        - key: preprocess_transform.json
          path: preprocess_transform.json
